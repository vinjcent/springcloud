<?xml version="1.0" encoding="UTF-8"?>

<configuration debug="false">
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <property name="logPath" value="/data/Logs/project"/>
    <property name="backPath" value="/data/Logs/project/bak"/>
    <!--<property resource="email.properties"/>-->
    <!-- 彩色日志 -->
    <!-- 彩色日志依赖的渲染类 -->
    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    <!-- 彩色日志格式 -->
    <property name="CONSOLE_LOG_PATTERN"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
    <property name="CONSOLE_LOG_PATTERN"
              value="%yellow(%date{yyyy-MM-dd HH:mm:ss}) | %highlight(%-5level) | %red(%thread) | %red(%file:%line) | %green(%logger) | %cyan(%msg%n)"/>

    <!-- Console 输出设置 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <!--格式化输出：%d:表示日期    %thread:表示线程名     %-5level:级别从左显示5个字符宽度  %msg:日志消息    %n:是换行符-->
            <!--<pattern>%black(project-) %red(%d{yyyy-MM-dd HH:mm:ss}) %green([%thread]) %highlight(%-5level)-->
            <!--    %boldMagenta(%logger) - %cyan(%msg%n)-->
            <!--</pattern>-->

            <charset>utf8</charset>
        </encoder>
    </appender>

    <!-- 按照每天生成日志文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logPath}/app.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${backPath}/app/app.log-%d{yyyy-MM-dd}.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
        <!--日志文件最大的大小
       <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
         <MaxFileSize>10MB</MaxFileSize>
       </triggeringPolicy>-->
    </appender>
    <!--&lt;!&ndash; error email &ndash;&gt;-->
    <!--&lt;!&ndash;  邮件 &ndash;&gt;-->
    <!--<property name="smtpHost" value="${email.smtpHost}"/>-->
    <!--<property name="smtpPort" value="${email.smtpPort}"/>-->
    <!--&lt;!&ndash; 发送邮件账号，默认为null &ndash;&gt;-->
    <!--<property name="username" value="${email.username}"/>-->
    <!--&lt;!&ndash; 发送邮件密码，默认为null &ndash;&gt;-->
    <!--<property name="password" value="${email.password}"/>-->
    <!--&lt;!&ndash; 如果设置为true，appender将会使用SSL连接到日志服务器。默认值：false &ndash;&gt;-->
    <!--<property name="SSL" value="false"/>-->
    <!--&lt;!&ndash; ，可设置多个<to>属性，指定多个目的邮箱 &ndash;&gt;-->
    <!--<property name="email_to" value="${email.email_to}"/>&lt;!&ndash;&ndash;&gt;-->
    <!--<property name="email_from" value="${email.email_from}" />-->
    <!--<property name="email_subject" value="${email.email_subject}" />-->
    <!-- ERROR邮件发送 asynchronousSending配置属性-->
    <!--<appender name="EMAIL" class="ch.qos.logback.classic.net.SMTPAppender">-->
    <!--    <smtpHost>${smtpHost}</smtpHost>-->
    <!--    <smtpPort>${smtpPort}</smtpPort>-->
    <!--    <username>${username}</username>-->
    <!--    <password>${password}</password>-->
    <!--    <asynchronousSending>true</asynchronousSending>-->
    <!--    <SSL>${SSL}</SSL>-->
    <!--    <to>${email_to}</to>-->
    <!--    <from>${email_from}</from>-->
    <!--    <subject>${email_subject}</subject>-->
    <!--    　　　　 &lt;!&ndash; html格式&ndash;&gt;-->
    <!--    <layout class="ch.qos.logback.classic.html.HTMLLayout">-->
    <!--        <Pattern>%date%level%thread%logger{0}%line%message</Pattern>-->
    <!--    </layout>-->
    <!--    　 &lt;!&ndash; 这里采用等级过滤器 指定等级相符才发送 &ndash;&gt;-->
    <!--    <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
    <!--        <level>ERROR</level>-->
    <!--        <onMatch>ACCEPT</onMatch>-->
    <!--        <onMismatch>DENY</onMismatch>-->
    <!--    </filter>-->
    <!--    <cyclicBufferTracker class="ch.qos.logback.core.spi.CyclicBufferTracker">-->
    <!--        &lt;!&ndash; 每个电子邮件只发送一个日志条目 经测试改变这个数字并不能将多个日志发在一个邮箱里 &ndash;&gt;-->
    <!--        <bufferSize>10</bufferSize>-->
    <!--    </cyclicBufferTracker>-->
    <!--</appender>-->

    <!-- 日志输出级别 -->
    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <!--<appender-ref ref="EMAIL"/>-->
        <appender-ref ref="FILE"/>
    </root>

</configuration>